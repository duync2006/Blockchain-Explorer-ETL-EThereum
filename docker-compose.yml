version: '3'

services:
  postgres_db: 
    image: postgres:latest
    container_name: postgres_db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - C:\postgresLocalStorage:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - C:\Users\NGUYEN CONG DUY\AppData\Roaming\RabbitMQ\db:/var/lib/rabbitmq/
        - C:\Users\NGUYEN CONG DUY\AppData\Roaming\RabbitMQ\log:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  etl-service:
    image: etl_ethereum:1.0.0
    container_name: etl-service
    ports:
      - "5000:5000"
    environment: 
      - DATABASE_URL_FOR_EXTRACT=${DATABASE_URL_FOR_EXTRACT}
      - RABBITMQ=${RABBITMQ}
    depends_on:
      - postgres_db
      - rabbitmq

  explorer_service:
    image: explorer_service:1.0.0
    container_name: explorer_service
    ports:
      - "3000:3000"
    depends_on:
      - postgres_db
    environment: 
      - DATABASE_URL=${DATABASE_URL}
      - PROVIDER=${PROVIDER}
    command: > 
      bash -c "npx prisma generate
      && npm run dev"

  decode-log-service:
    image: decode_log:1.0.0
    container_name: decode-log-service
    environment: 
      - DATABASE_URL=${DATABASE_URL}
      - RABBITMQ=${RABBITMQ}
    command: bash -c "npm run dev"
    ports:
      - "3005:3005"
    depends_on:
      postgres_db:
        condition: service_started  
      rabbitmq: 
        condition: service_healthy

  decompile-contract-service:
    image: decompile_contract:1.0.0
    container_name: decompile-contract-service
    ports:
      - "3006:3006"
    environment: 
      - DATABASE_URL_FOR_EXTRACT=${DATABASE_URL_FOR_EXTRACT}
      - RABBITMQ=${RABBITMQ}
    depends_on:
      postgres_db:
        condition: service_started
      rabbitmq: 
        condition: service_healthy
